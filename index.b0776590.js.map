{"mappings":"AA4DA,IAAMA,WAAaC,SAASC,cAAc,mBACpCC,KAAOF,SAASC,cAAc,YAMpC,SAASE,aAAaC,GACpBA,EAAMC,iBAEN,IAAsBC,EAAAF,EAAMG,cAAcC,SAAlCC,EAAcH,EAAdG,KAAMC,EAAQJ,EAARI,KAKdC,eAAeF,EAAKG,MAAOF,EAAKE,OAC/BC,MAAK,SAAAC,GACJZ,KAAKa,UAAYC,aAAaF,EAAKG,SAASC,Y,IAE7CC,OAAM,SAAAC,G,OAASC,QAAQC,IAAIF,E,IAC3BG,SAAQ,W,OAAMxB,WAAWyB,O,IAG5B,SAASb,iB,IAAeF,EAAAgB,UAAAC,OAAA,YAAAD,UAAA,GAASA,UAAA,GAAF,GAAIf,EAAAe,UAAAC,OAAA,YAAAD,UAAA,GAAQA,UAAA,GAAD,EAClCE,EAAW,+BACXC,EAAU,iCAEVC,EAAS,IAAIC,gBAAgB,CACjCC,IAAKH,EACLI,EAAGvB,EACHC,KAAMA,EACNuB,KAAM,OAGR,OAAOC,MAAM,GAA6BC,OAA1BR,EAAS,mBAAwBQ,OAAPN,IACzChB,MAAK,SAAAuB,GACJ,IAAIA,EAASC,GACX,MAAM,IAAIC,MAAMF,EAASG,YAE3B,OAAOH,EAASI,M,IAIpB,SAASxB,aAAayB,GACpB,OAAOA,EAAIC,KAAI,SAAAC,G,IACbC,EAAID,EAAJC,KAAIC,EAAAF,EACJG,IACEC,EAASF,EAATE,UAASC,EAAAH,EACTI,UACEC,EAAIF,EAAJE,KACAC,EAAIH,EAAJG,K,MAGA,0DAE4BhB,OAAdgB,EAAK,WACEhB,OADOe,EAAK,yDAEJf,OADRS,EAAK,8CAEET,OADCe,EAAK,6CACIf,OAAVY,EAAU,yB,IAEzCK,KAAK,G,CAvDVrD,WAAWsD,iBAAiB,SAAUlD","sources":["src/script.js"],"sourcesContent":["//Урок 10.1\n\n// *********Links********* \\\\\n// https://www.postman.com/downloads/\n// https://rickandmortyapi.com/documentation\n// https://www.weatherapi.com/docs/\n\n\n\n\n//Fetch\n\n// fetch(\"https://rickandmortyapi.com/api/character\")\n//       .then(response => console.log(\"then\",response))\n//       .catch(err => console.log(\"catch\", err))\n      \n\n// fetch(\"https://rickandmortyapi.com/api/character\")\n//       .then(data => {\n//         if(!data.ok){\n//             throw new Error(\"return then\")\n//         }\n//         return data.json() \n//       })\n//       .then(result => console.log(result))\n//       .catch(err => console.log(\"catch\", err))\n\n\n\n// Обробка помилок та парсинг відповіді\n\n\n// ***************Практика*************** \\\\\n\n// Потрібно створити функціонал для отримання прогнозу\n// погоди в місті.\n// Використай публічне API https://www.weatherapi.com/docs/\n// Використовуй ендпоінт Forecast для того, щоб отримати\n// прогноз погоди на декілька днів.\n\n// Створи форму в яку користувач:\n// 1 вводить назву міста.\n// 2 обирає на яку кількість днів він хоче отримати прогноз погоди\n// (3, 5 та 7 днів).\n// (Іноді параметр не працює в такому випадку можна зробити\n// пошук на 1, 2 та 3 дні)\n// Приклад форми https://prnt.sc/kFmLOj6gBdv-\n\n// Після сабміту форми відмалюй картки з інформацією\n// отриманою з бекенду.\n// Картка має містити відомості про:\n// 1 Зображення з погодою (icon)\n// 2 Текст з погодою (text)\n// 3 Дату (date)\n// 4 Середню температуру в Цельсія (avgtemp_c)\n// Приклад картки https://prnt.sc/h_p-A6Hty-i-\n\n// !!! ЗВЕРНИ УВАГУ ЩО API_KEY ПІСЛЯ РЕЄСТРАЦІЇ ВАЛІДНИЙ 21 ДЕНЬ !!!.\n\n\nconst searchForm = document.querySelector(\".js-search-form\")\nconst list = document.querySelector(\".js-list\")\n// console.log(searchForm);\n// console.log(list);\n\nsearchForm.addEventListener(\"submit\", handleSearch)\n\nfunction handleSearch(event){\n  event.preventDefault();\n\n  const { city, days} = event.currentTarget.elements;\n\n  // console.log(\"city\", city.value);\n  // console.log(\"days\", days.value);\n\n  serviceWeather(city.value, days.value)\n  .then(data => {\n    list.innerHTML = createMarkup(data.forecast.forecastday)\n  })\n  .catch(error => console.log(error))\n  .finally(() => searchForm.reset())\n}\n\nfunction serviceWeather(city = \"\", days = 1){\n  const BASE_URL = \"http://api.weatherapi.com/v1\";\n  const API_KEY = \"47cce444510845a3b5890337232811\";\n\n  const params = new URLSearchParams({\n    key: API_KEY,\n    q: city,\n    days: days,\n    lang: \"uk\"\n  })\n\n  return fetch(`${BASE_URL}/forecast.json?${params}`)\n  .then(response => {\n    if(!response.ok){\n      throw new Error(response.statusText)\n    }\n    return response.json();\n  })\n}\n\nfunction createMarkup(arr){\n  return arr.map(({\n    date,\n    day: {\n      avgtemp_c,\n      condition:{\n        text, \n        icon\n      }\n    }\n  }) => `\n      <li class=\"weather-catd\">\n          <img src=\"${icon}\" alt=\"${text}\" class=\"weather-icon\"/>\n          <h2 class=\"date\">${date}</h2>\n          <h3 class=\"weather-text\">${text}</h3>\n          <h3 class=\"temperature\">${avgtemp_c}</h3>\n      </li>\n  `).join(\"\")\n}"],"names":["searchForm","document","querySelector","list","handleSearch","event","preventDefault","_elements","currentTarget","elements","city","days","serviceWeather","value","then","data","innerHTML","createMarkup","forecast","forecastday","catch","error","console","log","finally","reset","arguments","length","BASE_URL","API_KEY","params","URLSearchParams","key","q","lang","fetch","concat","response","ok","Error","statusText","json","arr","map","param","date","_day","day","avgtemp_c","_condition","condition","text","icon","join","addEventListener"],"version":3,"file":"index.b0776590.js.map"}